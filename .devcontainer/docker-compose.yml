services:
  application: 
    build: .
    container_name: development
    env_file: 
      - ./.env
    volumes: 
      - ../:/workspaces/
    networks: 
      - trans_net
    expose:
      - 8000
    labels:
      - 'devcontainer.local_folder=/home/fheid/transcendence'
      - 'devcontainer.config_file=/home/fheid/transcendence/.devcontainer/devcontainer.json'
  user_service: 
    build: 
      context: ./../app/user_service/
      dockerfile: Dockerfile.django
    container_name: user_service
    env_file:
      - ./.env
    volumes:
      - ./../app/user_service/:/app/
    expose:
      - 8002
    networks: 
      - trans_net
    depends_on:
      - database
      - redis
    
  database:
    container_name: django_db
    image: postgres:latest
    env_file:
      - .env
    networks:
      - trans_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
  user_db:
    container_name: user_db
    image: postgres:latest
    env_file:
      - .env
    networks:
      - trans_net
    volumes:
      - user_db:/var/lib/postgresql/data
    expose:
      - 5432

  postgres_exporter:
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@user_db:5432/$POSTGRES_DB?sslmode=disable"
    expose:
      - 9187
    networks:
      - trans_net
    depends_on:
      - user_db

  nginx:
    container_name: nginx
    image: nginx
    volumes:
      - ./conf/nginx:/etc/nginx/conf.d
      - ./../src:/var/www/html/frontend/
    depends_on:
      - user_service
      - application
    networks:
      - trans_net
    expose:
      - 8090
    ports:
      - "8090:8090"

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command: -nginx.scrape-uri http://nginx:80/stub_status
    expose:
      - 9113
    networks:
      - trans_net
    depends_on:
      - nginx

  adminer: 
    container_name: adminer
    image: adminer
    networks: 
      - trans_net
    ports: 
      - "8080:8080"
  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - redis_data:/data
    expose:
      - 6379
    networks:
     - trans_net

  redis_exporter:
    image: oliver006/redis_exporter:latest
    command: --redis.addr=redis:6379
    expose:
      - 9121
    networks:
      - trans_net
    depends_on:
      - redis

  blockchain:
    build: ./requirements/blockchain
    container_name: blockchain
    env_file: 
      - ./.env
    networks:
      - trans_net
    ports:
      - "5000:5000"
  daphne_user:
    build: 
      context: ./../app/user_service/
      dockerfile: Dockerfile.daphne
    container_name: user_service_daphne
    env_file:
      - ./.env
    volumes:
      - ./../app/user_service/:/app/
    expose:
      - 8001
      - 8002
    networks: 
      - trans_net
  prometheus:
    image: prom/prometheus:v2.21.0
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - trans_net

  grafana:
    image: grafana/grafana:7.5.7
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./conf/grafana:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    networks:
      - trans_net

networks: 
  trans_net: 
    driver: bridge
volumes:
  postgres_data:
  user_db:
  redis_data:
  prometheus_data:
  grafana-data:
